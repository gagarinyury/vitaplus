#!/usr/bin/env python3
import json
import re

with open('/Users/yurygagarin/Code/1/vitaplus/research/interactions_database.json', 'r', encoding='utf-8') as f:
    interactions = json.load(f)

# –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –≤–µ—â–µ—Å—Ç–≤–∞ –∏ –æ—á–∏—â–∞–µ–º –∏—Ö
real_substances = set()

for interaction in interactions:
    substance = interaction['interacts_with'].strip()
    if substance and substance != 'unknown':
        # –û—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –∫–æ—Ä–æ—Ç–∫–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è (–≤–µ—Ä–æ—è—Ç–Ω–æ, —Ä–µ–∞–ª—å–Ω—ã–µ –≤–µ—â–µ—Å—Ç–≤–∞)
        if len(substance) < 50 and not substance.startswith(('Does ', 'Taking ', 'Some ', 'They ', 'The ', 'This ', 'It ')):
            # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è
            if not any(word in substance.lower() for word in ['studies', 'research', 'evidence', 'clinical', 'trial', 'patients', 'people']):
                real_substances.add(substance)

print('üßπ –û–ß–ò–©–ï–ù–ù–´–ô –°–ü–ò–°–û–ö –†–ï–ê–õ–¨–ù–´–• –í–ï–©–ï–°–¢–í:')
print('=' * 50)

# –ö–∞—Ç–µ–≥–æ—Ä–∏–∑–∞—Ü–∏—è
medicines = []
supplements = []
diseases = []
foods = []
other = []

for substance in sorted(real_substances):
    substance_lower = substance.lower()
    
    # –õ–µ–∫–∞—Ä—Å—Ç–≤–∞ (–ø–æ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–Ω—ã–º –Ω–∞–∑–≤–∞–Ω–∏—è–º)
    if any(med in substance_lower for med in ['mevacor', 'sumycin', 'zestril', 'stalevo', 'sterapred', 'microzide', 'hydro']):
        medicines.append(substance)
    # –ë–æ–ª–µ–∑–Ω–∏
    elif any(disease in substance_lower for disease in ['disease', 'syndrome', 'alzheimer', 'crohn', 'wilson', 'wernicke', 'menkes']):
        diseases.append(substance)
    # –í–∏—Ç–∞–º–∏–Ω—ã/–º–∏–Ω–µ—Ä–∞–ª—ã/–ë–ê–î—ã
    elif any(supp in substance_lower for supp in ['vitamin', 'copper', 'folic', 'calcium', 'iron', 'magnesium', 'zinc']):
        supplements.append(substance)
    # –ü—Ä–æ–¥—É–∫—Ç—ã
    elif any(food in substance_lower for food in ['cabbage', 'mushrooms', 'sunscreens']):
        foods.append(substance)
    # –û—Å—Ç–∞–ª—å–Ω–æ–µ
    else:
        other.append(substance)

print('üíä –õ–ï–ö–ê–†–°–¢–í–ê:')
for i, med in enumerate(medicines, 1):
    print(f'  {i:2d}. {med}')

print('\nüß¨ –í–ò–¢–ê–ú–ò–ù–´/–ú–ò–ù–ï–†–ê–õ–´/–ë–ê–î—ã:')  
for i, supp in enumerate(supplements, 1):
    print(f'  {i:2d}. {supp}')

print('\nüè• –ë–û–õ–ï–ó–ù–ò/–°–û–°–¢–û–Ø–ù–ò–Ø:')
for i, disease in enumerate(diseases, 1):
    print(f'  {i:2d}. {disease}')

print('\nüçé –ü–†–û–î–£–ö–¢–´/–í–ï–©–ï–°–¢–í–ê:')
for i, food in enumerate(foods, 1):
    print(f'  {i:2d}. {food}')

print('\n‚ùì –ü–†–û–ß–ï–ï:')
for i, item in enumerate(other, 1):
    print(f'  {i:2d}. {item}')

total_clean = len(medicines) + len(supplements) + len(diseases) + len(foods) + len(other)
print(f'\nüìä –ò–¢–û–ì–û –†–ï–ê–õ–¨–ù–´–• –í–ï–©–ï–°–¢–í: {total_clean}')
print(f'   –õ–µ–∫–∞—Ä—Å—Ç–≤–∞: {len(medicines)}')
print(f'   –ë–ê–î—ã/–≤–∏—Ç–∞–º–∏–Ω—ã: {len(supplements)}')
print(f'   –ë–æ–ª–µ–∑–Ω–∏: {len(diseases)}')
print(f'   –ü—Ä–æ–¥—É–∫—Ç—ã: {len(foods)}')
print(f'   –ü—Ä–æ—á–µ–µ: {len(other)}')

# –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –æ—á–∏—â–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫
with open('/Users/yurygagarin/Code/1/vitaplus/research/clean_substances_list.txt', 'w', encoding='utf-8') as f:
    f.write('–û–ß–ò–©–ï–ù–ù–´–ô –°–ü–ò–°–û–ö –†–ï–ê–õ–¨–ù–´–• –í–ï–©–ï–°–¢–í –î–õ–Ø –í–ó–ê–ò–ú–û–î–ï–ô–°–¢–í–ò–ô\n')
    f.write('=' * 60 + '\n\n')
    
    f.write('üíä –õ–ï–ö–ê–†–°–¢–í–ê:\n')
    for i, med in enumerate(medicines, 1):
        f.write(f'  {i:2d}. {med}\n')
    
    f.write('\nüß¨ –í–ò–¢–ê–ú–ò–ù–´/–ú–ò–ù–ï–†–ê–õ–´/–ë–ê–î—ã:\n')
    for i, supp in enumerate(supplements, 1):
        f.write(f'  {i:2d}. {supp}\n')
    
    f.write('\nüè• –ë–û–õ–ï–ó–ù–ò/–°–û–°–¢–û–Ø–ù–ò–Ø:\n')
    for i, disease in enumerate(diseases, 1):
        f.write(f'  {i:2d}. {disease}\n')
    
    f.write('\nüçé –ü–†–û–î–£–ö–¢–´/–í–ï–©–ï–°–¢–í–ê:\n')
    for i, food in enumerate(foods, 1):
        f.write(f'  {i:2d}. {food}\n')
    
    f.write('\n‚ùì –ü–†–û–ß–ï–ï:\n')
    for i, item in enumerate(other, 1):
        f.write(f'  {i:2d}. {item}\n')
    
    f.write(f'\nüìä –ò–¢–û–ì–û: {total_clean} —Ä–µ–∞–ª—å–Ω—ã—Ö –≤–µ—â–µ—Å—Ç–≤\n')

print('\n‚úÖ –û—á–∏—â–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤: clean_substances_list.txt')