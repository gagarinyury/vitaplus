#!/bin/bash
# –ü—Ä–æ—Å—Ç–æ–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è —Ñ–∞–∫—Ç-–ª–∏—Å—Ç–æ–≤ ODS
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./download_ods_simple.sh

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –ë–∞–∑–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
BASE_URL="https://ods.od.nih.gov/api/"
OUTPUT_DIR="ods_fact_sheets"
DELAY=1  # –°–µ–∫—É–Ω–¥—ã –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏

# –°–ø–∏—Å–æ–∫ —Ä–µ—Å—É—Ä—Å–æ–≤ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
RESOURCES=(
    # –û—Å–Ω–æ–≤–Ω—ã–µ –≤–∏—Ç–∞–º–∏–Ω—ã
    "VitaminA" "VitaminC" "VitaminD" "VitaminE" "VitaminK"
    "VitaminB6" "VitaminB12" "Folate" "Niacin" "Riboflavin" 
    "Thiamin" "Biotin" "PantothenicAcid"
    
    # –ú–∏–Ω–µ—Ä–∞–ª—ã
    "Calcium" "Iron" "Magnesium" "Zinc" "Selenium" 
    "Chromium" "Copper" "Iodine" "Manganese" "Molybdenum"
    "Phosphorus" "Potassium" "Sodium"
    
    # –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –¥–æ–±–∞–≤–∫–∏
    "Omega3FattyAcids" "Probiotics" "Ashwagandha" "Multivitamin"
    "CoQ10" "Glucosamine" "Chondroitin" "Ginkgo" "Ginseng"
    "Echinacea" "GarlicSupplements" "Turmeric" "Melatonin"
    
    # –ê–º–∏–Ω–æ–∫–∏—Å–ª–æ—Ç—ã
    "Creatine" "BetaAlanine" "BCAA" "Carnitine" "Taurine"
    
    # –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Ç–µ–º—ã
    "DietarySupplementsExercise" "DietarySupplementsOlderAdults"
    "DietarySupplementsPregnancy" "DietarySupplementsCOVID19"
    "WeightLossSupplements" "EnergyDrinks"
)

# –£—Ä–æ–≤–Ω–∏ —á—Ç–µ–Ω–∏—è –∏ —Ñ–æ—Ä–º–∞—Ç—ã
READING_LEVELS=("Consumer" "HealthProfessional")
OUTPUT_FORMATS=("XML" "HTML")

# –°—á–µ—Ç—á–∏–∫–∏
TOTAL_ATTEMPTED=0
SUCCESSFUL_DOWNLOADS=0
FAILED_DOWNLOADS=0
EXISTING_FILES=0

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø–∞–ø–æ–∫
setup_directories() {
    echo -e "${BLUE}üìÅ –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø–∞–ø–æ–∫...${NC}"
    
    for format in "xml" "html" "json"; do
        for level in "consumer" "health_professional" "spanish"; do
            mkdir -p "${OUTPUT_DIR}/${format}/${level}"
        done
    done
    
    mkdir -p "${OUTPUT_DIR}/logs"
    echo -e "${GREEN}‚úÖ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø–∞–ø–æ–∫ —Å–æ–∑–¥–∞–Ω–∞ –≤: ${OUTPUT_DIR}${NC}"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Ä–µ—Å—É—Ä—Å–∞
test_resource() {
    local resource=$1
    local level=$2
    local format=$3
    
    local url="${BASE_URL}?resourcename=${resource}&readinglevel=${level}&outputformat=${format}"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å
    local response_size=$(curl -s -o /dev/null -w "%{size_download}" "$url" 2>/dev/null || echo "0")
    
    if [ "$response_size" -gt 1000 ]; then
        return 0  # –î–æ—Å—Ç—É–ø–µ–Ω
    else
        return 1  # –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è —Ñ–∞–∫—Ç-–ª–∏—Å—Ç–∞
download_fact_sheet() {
    local resource=$1
    local level=$2
    local format=$3
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—É—Ç—å –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
    local level_dir=$(echo "$level" | tr '[:upper:]' '[:lower:]' | sed 's/health/health_/')
    local file_extension=$(echo "$format" | tr '[:upper:]' '[:lower:]')
    local filename="${resource}_${level}_${format}.${file_extension}"
    local filepath="${OUTPUT_DIR}/${file_extension}/${level_dir}/${filename}"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ñ–∞–π–ª
    if [ -f "$filepath" ]; then
        echo -e "${YELLOW}‚è≠Ô∏è  –£–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: ${filename}${NC}"
        ((EXISTING_FILES++))
        return 0
    fi
    
    local url="${BASE_URL}?resourcename=${resource}&readinglevel=${level}&outputformat=${format}"
    
    echo -e "${BLUE}üì• –°–∫–∞—á–∏–≤–∞–Ω–∏–µ: ${resource} (${level}, ${format})${NC}"
    
    # –°–∫–∞—á–∏–≤–∞–µ–º —Ñ–∞–π–ª
    if curl -s -f -o "$filepath" "$url"; then
        local file_size=$(stat -f%z "$filepath" 2>/dev/null || stat -c%s "$filepath" 2>/dev/null || echo "0")
        
        if [ "$file_size" -gt 1000 ]; then
            echo -e "${GREEN}‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω: ${filename} ($(echo "scale=1; $file_size/1024" | bc -l)KB)${NC}"
            ((SUCCESSFUL_DOWNLOADS++))
            return 0
        else
            echo -e "${RED}‚ùå –§–∞–π–ª —Å–ª–∏—à–∫–æ–º –º–∞–ª: ${filename}${NC}"
            rm -f "$filepath"
            ((FAILED_DOWNLOADS++))
            return 1
        fi
    else
        echo -e "${RED}‚ùå –û—à–∏–±–∫–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è: ${filename}${NC}"
        ((FAILED_DOWNLOADS++))
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –æ—Ç—á–µ—Ç–∞
create_report() {
    local report_file="${OUTPUT_DIR}/download_report.txt"
    
    echo "üìã –°–æ–∑–¥–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–∞..."
    
    cat > "$report_file" << EOF
ODS Fact Sheets Download Report
===============================
–î–∞—Ç–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è: $(date)

–°–¢–ê–¢–ò–°–¢–ò–ö–ê:
- –í—Å–µ–≥–æ –ø–æ–ø—ã—Ç–æ–∫: $TOTAL_ATTEMPTED
- –£—Å–ø–µ—à–Ω–æ —Å–∫–∞—á–∞–Ω–æ: $SUCCESSFUL_DOWNLOADS  
- –£–∂–µ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–ª–æ: $EXISTING_FILES
- –ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–∞—á–∞—Ç—å: $FAILED_DOWNLOADS

–ù–ê–ô–î–ï–ù–ù–´–ï –†–ï–°–£–†–°–´:
EOF
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
    find "$OUTPUT_DIR" -name "*.xml" -o -name "*.html" | sort >> "$report_file"
    
    echo -e "${GREEN}üìä –û—Ç—á–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω: ${report_file}${NC}"
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    echo -e "${BLUE}üöÄ –ù–∞—á–∏–Ω–∞–µ–º —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ —Ñ–∞–∫—Ç-–ª–∏—Å—Ç–æ–≤ ODS...${NC}"
    echo -e "${BLUE}üìù –ë—É–¥–µ–º –ø—Ä–æ–≤–µ—Ä—è—Ç—å ${#RESOURCES[@]} —Ä–µ—Å—É—Ä—Å–æ–≤${NC}"
    
    setup_directories
    
    local resource_count=1
    local total_resources=${#RESOURCES[@]}
    
    for resource in "${RESOURCES[@]}"; do
        echo -e "\n${BLUE}üì¶ [$resource_count/$total_resources] –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º: ${resource}${NC}"
        
        local found_any=false
        
        for level in "${READING_LEVELS[@]}"; do
            for format in "${OUTPUT_FORMATS[@]}"; do
                ((TOTAL_ATTEMPTED++))
                
                if test_resource "$resource" "$level" "$format"; then
                    found_any=true
                    download_fact_sheet "$resource" "$level" "$format"
                    sleep $DELAY
                fi
            done
        done
        
        if [ "$found_any" = false ]; then
            echo -e "${RED}‚ùå ${resource}: –ù–µ –Ω–∞–π–¥–µ–Ω${NC}"
        fi
        
        ((resource_count++))
    done
    
    # –°–æ–∑–¥–∞–µ–º –æ—Ç—á–µ—Ç
    create_report
    
    # –§–∏–Ω–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    echo -e "\n${GREEN}üéâ –°–∫–∞—á–∏–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!${NC}"
    echo -e "${GREEN}üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:${NC}"
    echo -e "${GREEN}   ‚Ä¢ –°–∫–∞—á–∞–Ω–æ —Ñ–∞–π–ª–æ–≤: ${SUCCESSFUL_DOWNLOADS}${NC}"
    echo -e "${GREEN}   ‚Ä¢ –£–∂–µ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–ª–æ: ${EXISTING_FILES}${NC}"
    echo -e "${GREEN}   ‚Ä¢ –ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–∞—á–∞—Ç—å: ${FAILED_DOWNLOADS}${NC}"
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä –ø–∞–ø–∫–∏
    local total_size=$(du -sh "$OUTPUT_DIR" 2>/dev/null | cut -f1 || echo "N/A")
    echo -e "${GREEN}   ‚Ä¢ –û–±—â–∏–π —Ä–∞–∑–º–µ—Ä: ${total_size}${NC}"
    
    echo -e "\n${BLUE}‚úÖ –í—Å–µ —Ñ–∞–π–ª—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ –ø–∞–ø–∫–µ: ${OUTPUT_DIR}${NC}"
    echo -e "${BLUE}üìã –û—Ç—á–µ—Ç –æ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏: ${OUTPUT_DIR}/download_report.txt${NC}"
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
check_dependencies() {
    for cmd in curl bc; do
        if ! command -v "$cmd" &> /dev/null; then
            echo -e "${RED}‚ùå –¢—Ä–µ–±—É–µ—Ç—Å—è —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å: $cmd${NC}"
            exit 1
        fi
    done
}

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
while [[ $# -gt 0 ]]; do
    case $1 in
        --output-dir)
            OUTPUT_DIR="$2"
            shift 2
            ;;
        --delay)
            DELAY="$2"
            shift 2
            ;;
        --help)
            echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 [--output-dir DIR] [--delay SECONDS]"
            echo "  --output-dir DIR     –ü–∞–ø–∫–∞ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: ods_fact_sheets)"
            echo "  --delay SECONDS      –ó–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: 1)"
            echo "  --help               –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É"
            exit 0
            ;;
        *)
            echo "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä: $1"
            echo "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ --help –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏"
            exit 1
            ;;
    esac
done

# –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∫—Ä–∏–ø—Ç
check_dependencies
main