#!/usr/bin/env python3
"""
–ë–µ–∑–æ–ø–∞—Å–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏ –ø–∏—Å–µ–º —á–µ—Ä–µ–∑ Gmail
–ü–∞—Ä–æ–ª—å –≤–≤–æ–¥–∏—Ç—Å—è –≤–æ –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è, –Ω–µ —Ö—Ä–∞–Ω–∏—Ç—Å—è –≤ –∫–æ–¥–µ
"""

import smtplib
import getpass
from email.mime.text import MIMEText
from email.mime.multipart import MIMEMultipart
from email.mime.base import MIMEBase
from email import encoders
import os
import sys

def send_email_batch(sender_email, sender_password, recipients, subject, body, attachment_path=None):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ –ø–∏—Å—å–º–∞ –Ω–µ—Å–∫–æ–ª—å–∫–∏–º –ø–æ–ª—É—á–∞—Ç–µ–ª—è–º"""
    
    # Gmail SMTP –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    smtp_server = "smtp.gmail.com"
    smtp_port = 587
    
    try:
        # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ä–≤–µ—Ä—É
        print("üîå –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Gmail SMTP...")
        server = smtplib.SMTP(smtp_server, smtp_port)
        server.starttls()  # –í–∫–ª—é—á–∞–µ–º —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ
        
        # –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
        print("üîê –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è...")
        server.login(sender_email, sender_password)
        print("‚úÖ –£—Å–ø–µ—à–Ω–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è!")
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–∞–∂–¥–æ–º—É –ø–æ–ª—É—á–∞—Ç–µ–ª—é
        successful_sends = 0
        failed_sends = 0
        
        for recipient in recipients:
            try:
                # –°–æ–∑–¥–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                msg = MIMEMultipart()
                msg['From'] = sender_email
                msg['To'] = recipient.strip()
                msg['Subject'] = subject
                
                # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç
                msg.attach(MIMEText(body, 'plain', 'utf-8'))
                
                # –î–æ–±–∞–≤–ª—è–µ–º –≤–ª–æ–∂–µ–Ω–∏–µ, –µ—Å–ª–∏ –µ—Å—Ç—å
                if attachment_path and os.path.exists(attachment_path):
                    with open(attachment_path, "rb") as attachment:
                        part = MIMEBase('application', 'octet-stream')
                        part.set_payload(attachment.read())
                    
                    encoders.encode_base64(part)
                    part.add_header(
                        'Content-Disposition',
                        f'attachment; filename= {os.path.basename(attachment_path)}'
                    )
                    msg.attach(part)
                
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º
                text = msg.as_string()
                server.sendmail(sender_email, recipient.strip(), text)
                print(f"‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: {recipient.strip()}")
                successful_sends += 1
                
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ {recipient}: {e}")
                failed_sends += 1
        
        # –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
        server.quit()
        
        print(f"\nüìä –ò–¢–û–ì–ò:")
        print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: {successful_sends}")
        print(f"‚ùå –û—à–∏–±–æ–∫: {failed_sends}")
        
        return successful_sends, failed_sends
        
    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        return 0, len(recipients)

def get_recipients():
    """–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π"""
    print("\nüìß –ü–û–õ–£–ß–ê–¢–ï–õ–ò:")
    print("–í–≤–µ–¥–∏—Ç–µ email –∞–¥—Ä–µ—Å–∞ –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π (–ø–æ –æ–¥–Ω–æ–º—É –Ω–∞ —Å—Ç—Ä–æ–∫—É)")
    print("–î–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –≤–≤–µ–¥–∏—Ç–µ –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É")
    
    recipients = []
    while True:
        email = input(f"–ü–æ–ª—É—á–∞—Ç–µ–ª—å {len(recipients) + 1}: ").strip()
        if not email:
            break
        
        # –ü—Ä–æ—Å—Ç–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è email
        if '@' in email and '.' in email:
            recipients.append(email)
            print(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω: {email}")
        else:
            print("‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞")
    
    return recipients

def get_email_content():
    """–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –ø–∏—Å—å–º–∞"""
    print("\n‚úçÔ∏è –°–û–î–ï–†–ñ–ò–ú–û–ï –ü–ò–°–¨–ú–ê:")
    
    subject = input("–¢–µ–º–∞ –ø–∏—Å—å–º–∞: ").strip()
    
    print("\n–¢–µ–∫—Å—Ç –ø–∏—Å—å–º–∞ (–¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –≤–≤–µ–¥–∏—Ç–µ '###' –Ω–∞ –æ—Ç–¥–µ–ª—å–Ω–æ–π —Å—Ç—Ä–æ–∫–µ):")
    body_lines = []
    while True:
        line = input()
        if line.strip() == '###':
            break
        body_lines.append(line)
    
    body = '\n'.join(body_lines)
    
    return subject, body

def get_attachment():
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –ø—É—Ç–∏ –∫ –≤–ª–æ–∂–µ–Ω–∏—é"""
    attachment = input("\n–ü—É—Ç—å –∫ —Ñ–∞–π–ª—É-–≤–ª–æ–∂–µ–Ω–∏—é (–∏–ª–∏ Enter –¥–ª—è –ø—Ä–æ–ø—É—Å–∫–∞): ").strip()
    
    if attachment and os.path.exists(attachment):
        print(f"‚úÖ –í–ª–æ–∂–µ–Ω–∏–µ –Ω–∞–π–¥–µ–Ω–æ: {attachment}")
        return attachment
    elif attachment:
        print("‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return None
    else:
        return None

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("="*50)
    print("üìß Gmail –º–∞—Å—Å–æ–≤–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞")
    print("="*50)
    
    # –ü–æ–ª—É—á–∞–µ–º email –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è
    sender_email = input("\nüë§ –í–∞—à Gmail: ").strip()
    
    # –ë–µ–∑–æ–ø–∞—Å–Ω–æ –ø–æ–ª—É—á–∞–µ–º –ø–∞—Ä–æ–ª—å
    print("\nüîê –í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å (–∏–ª–∏ App Password –¥–ª—è Gmail):")
    print("‚ÑπÔ∏è  –°–∏–º–≤–æ–ª—ã –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏")
    sender_password = getpass.getpass("–ü–∞—Ä–æ–ª—å: ")
    
    # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π
    recipients = get_recipients()
    
    if not recipients:
        print("‚ùå –ù–µ—Ç –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π. –í—ã—Ö–æ–¥.")
        return
    
    print(f"\nüìã –ü–æ–ª—É—á–∞—Ç–µ–ª–∏ ({len(recipients)}):")
    for i, recipient in enumerate(recipients, 1):
        print(f"  {i}. {recipient}")
    
    # –ü–æ–ª—É—á–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
    subject, body = get_email_content()
    
    # –ü–æ–ª—É—á–∞–µ–º –≤–ª–æ–∂–µ–Ω–∏–µ
    attachment_path = get_attachment()
    
    # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
    print(f"\nüìã –°–í–û–î–ö–ê:")
    print(f"–û—Ç: {sender_email}")
    print(f"–ö–æ–º—É: {len(recipients)} –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π")
    print(f"–¢–µ–º–∞: {subject}")
    print(f"–í–ª–æ–∂–µ–Ω–∏–µ: {'–î–∞' if attachment_path else '–ù–µ—Ç'}")
    
    confirm = input("\n‚ùì –û—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–∏—Å—å–º–∞? (y/n): ").lower()
    
    if confirm in ['y', 'yes', '–¥–∞', '–¥']:
        print("\nüöÄ –ù–∞—á–∏–Ω–∞–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É...")
        successful, failed = send_email_batch(
            sender_email, sender_password, recipients, 
            subject, body, attachment_path
        )
        
        if successful > 0:
            print(f"\nüéâ –†–∞—Å—Å—ã–ª–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
        
    else:
        print("‚ùå –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞")

if __name__ == "__main__":
    try:
        main()
    except KeyboardInterrupt:
        print("\n\n‚ùå –ü—Ä–µ—Ä–≤–∞–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        print(f"\n‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")